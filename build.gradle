buildscript {
    ext {
        springBootVersion = '3.3.2'
        dependencyManagementVersion = '1.1.6'
    }
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:${dependencyManagementVersion}"
    }

    ext.profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile
    println "########## active_profile = $profile"
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = '21'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

        runtimeOnly 'com.h2database:h2'
        implementation 'org.redisson:redisson-spring-boot-starter:3.33.0'

        annotationProcessor 'org.projectlombok:lombok'
        implementation 'org.mapstruct:mapstruct:1.5.3.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
        annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    test {
        useJUnitPlatform()

        testLogging {
            events = ["passed", "failed"]
        }
        systemProperty "spring.profiles.active", profile
    }
}

project(':cj-product-api') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'com.github.codemonstur:embedded-redis:1.4.3'

        implementation project(':cj-product-core')
    }
}

project(':cj-product-core') {
    bootJar { enabled = false } // core 은 bootJar 로 패키징 할 필요 없음
    jar { enabled = true }
}
